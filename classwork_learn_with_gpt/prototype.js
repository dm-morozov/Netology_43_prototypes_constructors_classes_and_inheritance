// ### üßë‚Äçüíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

// –ß—Ç–æ–±—ã –∑–∞–∫—Ä–µ–ø–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª, —Å–æ–∑–¥–∞–π –ø—Ä–æ—Ç–æ—Ç–∏–ø –¥–ª—è –∏–≥—Ä–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:

// 1. **–ó–∞–¥–∞—á–∞**:

//   - –°–æ–∑–¥–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `Player` —Å –ø–æ–ª—è–º–∏ `name` –∏ `score` (–æ—á–∫–∏).

//   - –î–æ–±–∞–≤—å –≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø –º–µ—Ç–æ–¥ `addScore(amount)`, –∫–æ—Ç–æ—Ä—ã–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç `score` –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä–æ–¥–µ `${name} –ø–æ–ª—É—á–∏–ª ${amount} –æ—á–∫–æ–≤! –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${score}`.

//   - –°–æ–∑–¥–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `ProPlayer`, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç `Player`, –∏ –¥–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `useBoost()`, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π `${name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±—É—Å—Ç, —É–¥–≤–∞–∏–≤–∞—è ${score}!`.




function Player(name, score = 0) {
    this.name = name;
    this.score = score;
}

Player.prototype.addScore = function(amount) {
    this.score += amount;
    return `${this.name} –ø–æ–ª—É—á–∏–ª ${amount} –æ—á–∫–æ–≤! –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${this.score}`;
}

function ProPlayer(name, score) {
    Player.call(this, name, score); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º name –∏ score
}

ProPlayer.prototype = Object.create(Player.prototype); // 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
ProPlayer.prototype.constructor = ProPlayer // 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º constructor

ProPlayer.prototype.UseBoost = function() {
    this.score *= 2;
    return `${this.name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±—É—Å—Ç, —É–¥–≤–∞–∏–≤–∞—è ${this.score}!`;
}

const player = new Player('–ò–≤–∞–Ω', 100);
console.log(player.addScore(50));

const pro = new ProPlayer('–°–µ—Ä–≥–µ–∏ÃÜ Pro', 200);
console.log(pro.name, pro.score);
console.log(pro.UseBoost());
console.log(pro.addScore(100));
